pipeline gtfsPipeline {

    gtfsExtractor
        -> gtfsZipInterpreter
        -> gtfsFilePicker
        -> gtfsTextFileInterpreter
        -> gtfsCSVInterpreter
        -> gtfsTableInterpreter
        -> loadgtfs;

    block gtfsExtractor oftype HttpExtractor {
		url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
	}

    block gtfsZipInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block gtfsFilePicker oftype FilePicker {
        path:"/stops.txt";
    }

	block gtfsTextFileInterpreter oftype TextFileInterpreter {}

	block gtfsCSVInterpreter oftype CSVInterpreter {
		delimiter: ",";
        enclosing: '"';
	}

    constraint zone1925 on integer:
        value == 1925;

    valuetype OnlyZone1925 oftype integer {
        constraints: [zone1925];
    }

    constraint GeoCoor oftype RangeConstraint {
        lowerBound: -90;
        lowerBoundInclusive: true;
        upperBound: 90;
        upperBoundInclusive: true;
    }

    valuetype GeoCoorAngle oftype decimal {
        constraints: [GeoCoor];
    }

    block gtfsTableInterpreter oftype TableInterpreter {
        header: true;
        columns:[
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype GeoCoorAngle,
            "stop_lon" oftype GeoCoorAngle,
            "zone_id" oftype OnlyZone1925
        ];
    }

    block loadgtfs oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }
}